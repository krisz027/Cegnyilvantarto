/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package csomag;

import java.util.Collections;
import java.util.LinkedList;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


/**
 *
 * @author Jung Krisztián
 */
@SuppressWarnings("serial")
public class Program extends javax.swing.JFrame {
    /**
     * A cegek.xml nevű állomány elérési útját tartalmazza.
     */
    public String eleresiut = getClass().getClassLoader().getResource("cegek.xml").toString();
    
    /**
     * Logger létrehozása.
     */
    static Logger logger = LoggerFactory.getLogger(Program.class);
    /**
     * Az XML állományban lévő cégeket tároló láncolt lista.
     */
    LinkedList<Ceg> cegek;
    /**
     * Hibás adat bevitelére figyelmeztető flag.
     */
    int hibasadat = 0;
    /**
     * A Program osztályból példányosítok inicializálás nélkül. A metódusok hívásához szükséges.
     */
    static Program segedpeldany = new Program(); 
    
    /**
     * Creates new form Program<br>
     * Az ablak kezdőpozíciójának beállítása. Az adatok beolvasása és kiíratása a jList1-be.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
	public Program() {
        
        initComponents();
        setLocation(100, 100);
        XmlKezelo muveletek = new XmlKezelo();
        
        cegek = muveletek.beolvas(eleresiut);
        Collections.sort(cegek);
        
        DefaultListModel modell = new DefaultListModel();
        for(Ceg i : cegek){
            modell.addElement(i);
        }
        jList1.setModel(modell); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cégnyilvántartó");
        setPreferredSize(new java.awt.Dimension(860, 490));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Új cég");

        jLabel2.setText("Ország");

        jLabel3.setText("Irányítószám");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Város");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Út");

        jLabel6.setText("Házszám");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Cégnév");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Koordináta (xx.xx.xx,xx)");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Koordináta (xx.xx.xx,xx)");

        jButton1.setText("Hozzáad");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Keresés");

        jLabel11.setText("Ország");

        jLabel12.setText("Irányítószám");

        jButton2.setText("Keresés");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Speciális keresés");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Koordináta");

        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Koordináta");

        jLabel16.setText("Keresés sugara (km)");

        jButton3.setText("Keresés");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jButton4.setText("Összes listázása");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Törlés");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Google Maps");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel17.setText("<html>(Válassz ki <u><b>egy</b></u> céget!)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(807, 807, 807))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(174, 174, 174))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(162, 162, 162))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2))
                                    .addComponent(jLabel10))
                                .addGap(19, 19, 19)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField11, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                            .addComponent(jTextField12))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(2, 2, 2)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2)))
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Ez a metódus a Hozzáad gomb lenyomására felvesszi az új céget a már
     * meglévők közé.
     *
     * @param evt Egy {@code ActionEvent} típusú elem, ami jelen esetben a gomb
     *            lenyomása.
     */
    @SuppressWarnings("unchecked")
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*HOZZAAD GOMB*/
        
        hibasadat = 0;
            /*adatok vizsgálata*/   
        if(jTextField1.getText().isEmpty()){
            segedpeldany.hibasBevitelFigyelmeztetes(jTextField1, "Nincs megadva az ország!");
        }
        if(hibasadat == 0){
            if(jTextField2.getText().isEmpty()){
                segedpeldany.hibasBevitelFigyelmeztetes(jTextField2, "Nincs megadva irányítószám!");
            }
        }
        if(hibasadat == 0){
            for(int i=0; i<jTextField2.getText().length(); i++){
                if(!Character.isDigit(jTextField2.getText().charAt(i))){
                    segedpeldany.hibasBevitelFigyelmeztetes(jTextField2, "Helytelen irányítószám!");
                    break;
                }
            }
        }
        if(hibasadat == 0){
            for(int i=0; i<jTextField5.getText().length(); i++){
                if(!Character.isDigit(jTextField5.getText().charAt(i))){
                    segedpeldany.hibasBevitelFigyelmeztetes(jTextField5, "Helytelen házszám!"); 
                    break;
                }
            }
        }
        if(hibasadat == 0){
            if(jTextField6.getText().isEmpty()){
                segedpeldany.hibasBevitelFigyelmeztetes(jTextField6, "Nincs megadva cégnév!");
            }
        }
        /*koordináták ellenorzese*/
        if(hibasadat == 0){
            String[] tomb1 = jTextField7.getText().split("\\.");
            segedpeldany.koordinataValidator(jTextField7, tomb1, 1);
           
        }/*2.koord*/
        if(hibasadat == 0){
            String[] tomb2 = jTextField8.getText().split("\\.");
            segedpeldany.koordinataValidator(jTextField8, tomb2, 2);
        
        }
        /*ha minden adat jo, felvesszuk, flag es mezok nullazasa*/
        if(hibasadat == 0){
            XmlKezelo muveletek = new XmlKezelo();
            Ceg akt = new Ceg(jTextField1.getText(), Integer.parseInt(jTextField2.getText()), jTextField3.getText(), jTextField4.getText(), Integer.parseInt(jTextField5.getText()), jTextField6.getText(), jTextField7.getText(), jTextField8.getText() );
            
            cegek.add(akt);
            logger.info("Az új cég hozzáadása megtörtént!");
            Collections.sort(cegek);
            muveletek.kiir(eleresiut, cegek);

            segedpeldany.jListBeallito(cegek, 0);
            
            jTextField1.setText(null);
            jTextField2.setText(null);
            jTextField3.setText(null);
            jTextField4.setText(null);
            jTextField5.setText(null);
            jTextField6.setText(null);
            jTextField7.setText(null);
            jTextField8.setText(null);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Ez a metódus a cégek közti keresést valósítja meg. A keresés ország,
     * irányítószám, valamint orzág és irányítószám szerinti lehet.
     *
     * @param evt Egy {@code ActionEvent} típusú elem, ami jelen esetben a gomb
     *             lenyomása.
     */
    @SuppressWarnings("unchecked")
	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        /*KERESES GOMB*/
        
        XmlKezelo muveletek = new XmlKezelo();
        LinkedList<Ceg> szurtadatok = new LinkedList<Ceg>();
        
        szurtadatok = muveletek.keres(jTextField9.getText(), jTextField10.getText(), cegek);
        Collections.sort(szurtadatok);
        
        segedpeldany.jListBeallito(szurtadatok, 0);
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Ez a metódus a cégek közti seciális keresést valósítja meg. Egy adott
     * pont körül, tetszőleges sugárral(kilóméterben).
     *
     * @param evt Egy {@code ActionEvent} típusú elem, ami jelen esetben a gomb
     *            lenyomása.
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        /*SPEC. KERESES GOMB*/
        logger.info("Specialis keresés kezdődik!");
        hibasadat = 0;
        LinkedList<Ceg> szurtadatok = new LinkedList<Ceg>();
        XmlKezelo muveletek = new XmlKezelo();
        
        String[] tomb = jTextField11.getText().split("\\.");
        segedpeldany.koordinataValidator(jTextField11, tomb, 1);
        
        if(hibasadat == 0){
            tomb = jTextField12.getText().split("\\.");
            segedpeldany.koordinataValidator(jTextField12, tomb, 2);
        }
        if(hibasadat == 0){
            if(jTextField13.getText().isEmpty()){
                segedpeldany.hibasBevitelFigyelmeztetes(jTextField13, "Nincs megadva a sugár!");
            }
        }
        if(hibasadat == 0){
            for(int i=0; i<jTextField13.getText().length(); i++){
                if( !Character.isDigit(jTextField13.getText().charAt(i)) ){
                    segedpeldany.hibasBevitelFigyelmeztetes(jTextField13, "A sugár betűt tartalmaz!");
                }
            }
        }
        /*ha minden adat megfelel, folytatás*/
        if(hibasadat == 0){
            szurtadatok = muveletek.specialisKereses(jTextField11.getText(), jTextField12.getText(), Double.parseDouble(jTextField13.getText()), cegek);
            Collections.sort(szurtadatok);

            segedpeldany.jListBeallito(szurtadatok, 1);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    /**
     * Ez a metódus az összes cég kilistázását valósítja meg.
     *
     * @param evt Egy {@code ActionEvent} típusú elem, ami jelen esetben a gomb
     *            lenyomása.
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        /*OSSZES LISTAZASA GOMB*/
        
        Collections.sort(cegek);
        segedpeldany.jListBeallito(cegek, 0);
        logger.info("Az összes cég kilistázása sikeresen megtörtént!");
            /*kereso textfield-ek nullazasa*/
        jTextField9.setText(null);
        jTextField10.setText(null);
    }//GEN-LAST:event_jButton4ActionPerformed
    /**
     * Ez a metódus egy, a listából kiválasztott cég megjelenítését valósítja
     * meg a Google Maps-en.
     *
     * @param evt Egy {@code ActionEvent} típusú elem, ami jelen esetben a gomb
     *            lenyomása.
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        /*GOOGLE MAPS GOMB*/
        
        XmlKezelo muveletek = new XmlKezelo();
        int[] indexek = jList1.getSelectedIndices();
        if(indexek.length > 0){
            String koord1 = cegek.get(indexek[0]).getKoord1();
            String koord2 = cegek.get(indexek[0]).getKoord2();

            muveletek.googleMaps(koord1, koord2);  
        }else{
            JOptionPane.showMessageDialog(rootPane, "Nincs cég kijelölve a térképen való megjelenítéshez", "Figyelmeztetés", 3);
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    /**
     * Ez a metódus a listából kiválasztott cég, vagy cégek törlését valósítja meg.
     *
     * @param evt Egy {@code ActionEvent} típusú elem, ami jelen esetben a gomb
     *            lenyomása.
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        /*TORLES GOMB*/
        
        int[] indexek = jList1.getSelectedIndices();
        XmlKezelo muveletek = new XmlKezelo();
        
        cegek = muveletek.torles(indexek, cegek);
        Collections.sort(cegek);
        muveletek.kiir(eleresiut, cegek);
        
        segedpeldany.jListBeallito(cegek, 0);
    }//GEN-LAST:event_jButton5ActionPerformed
    /**
     * Nem engedi kitörölni ez a lekvár.
     * @param evt  Egy {@code ActionEvent} típusú elem, ami jelen esetben a gomb
     *            lenyomása.
     */
    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt){
        
    }

    /**
     * Look and feel beállítása az aktuális rendszer kinézetére, valamint a form létrehozása és megjelenítése.
     * @param args A parancssori argumentumok.
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            logger.error(ex.getMessage());
        } catch (InstantiationException ex) {
            logger.error(ex.getMessage());
        } catch (IllegalAccessException ex) {
            logger.error(ex.getMessage());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            logger.error(ex.getMessage());
        }
        //</editor-fold>
        
        try {
            // Set System L&F
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            logger.info("A rendszer LookAndFeel-jének beállítása sikeresen megtörtént!");
        } 
        catch (UnsupportedLookAndFeelException e) {
           logger.error(e.getMessage());
        }
        catch (ClassNotFoundException e) {
           logger.error(e.getMessage());
        }
        catch (InstantiationException e) {
           logger.error(e.getMessage());
        }
        catch (IllegalAccessException e) {
           logger.error(e.getMessage());
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Program uj = new Program();
                uj.setVisible(true);
                segedpeldany = uj;
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    /**
     * A form jList-jének a tartalmának a beállítására használt metódus.
     * 
     * @param lista A lista, amit ki szeretnénk íratni.
     * @param mod A kiíratás módja. Ha {@code mod}=0, akkor sima, ha {@code mod}=1, akkor az aktuális távolsággal együtti kiíratás.
     */
    public void jListBeallito(LinkedList<Ceg> lista, int mod){
        DefaultListModel modell = new DefaultListModel();
        if(mod == 0){
            for(Ceg i : lista){
                modell.addElement(i);
            }
            jList1.setModel(modell);
        }
        else if(mod == 1){
            for(Ceg i : lista){
                modell.addElement(i.toStringTavolsaggal());
            }
            jList1.setModel(modell);
        }
    }
    
    /**
     * Hibás bevitelre figyelmeztető metódus.<br>
     * Megjelenít egy MessageDialog ablakot az aktuális, paraméterként megkapott hibaüzenettel, és az ugyancsak paraméterként megkapott mező tartalmát {@code null}-ra állítja. 
     * Valamint egy globális változó értékét növeli, ami azt jelzi, hogy hibás adatba futottunk.
     * 
     * @param mezo A mező amiben a hibás adat van, és amit majd {@code null}-ra állítunk.
     * @param uzenet Az aktuális hibaüzenet.
     */
    public void hibasBevitelFigyelmeztetes(javax.swing.JTextField mezo ,String uzenet){
        JOptionPane.showMessageDialog(rootPane, uzenet, "Figyelmeztetés", 3);
        mezo.setText(null);
        hibasadat=10;
        logger.warn(uzenet);
        
    }
    
    /**
     * Koordináta formátumának ellenőrzésére használt metódus.<br>
     * Ha rossz a formátum, akkor egy MessageDialog figyelmeztet az aktuális hibára. Lehetséges hibák: betűt tartalmaz, helytelen formátum, valótlan értéket tartalmaz.
     * 
     * @param mezo A mező aminek a tartalmát vizsgáljuk.
     * @param tomb Az {@code xx.xx.xx,xx} formátumú koordináta "."-ra való szétbontásnál eredményül kapott részsztringeket tartalmazó tömb.
     * @param k Egy egész szám. Azt jelzi, hogy a cég melyik koordinátájával van baj.
     */
    public void koordinataValidator(javax.swing.JTextField mezo, String[] tomb, int k){
        if(tomb.length != 3){/*szogmp-ben vesszo helyett pont irasara kilép*/
                    segedpeldany.hibasBevitelFigyelmeztetes(mezo, "Helytelen a(z) "+ k +". koordináta formátuma! \nA szögmásodpercben a . helyett a , az elvárt!");
                }
        if(hibasadat == 0){
            for(int i=0; i<3; i++){
                    if(hibasadat == 0){
                        for(int j=0; j<tomb[i].length(); j++){
                            if((j==0 && i==0 && tomb[i].charAt(j)=='-') || (i == 2 && tomb[i].charAt(j)==',')){
                                j++;
                            }
                            if( ! Character.isDigit(tomb[i].charAt(j))){
                                segedpeldany.hibasBevitelFigyelmeztetes(mezo, "Helytelen a(z) "+ k +". koordináta formátuma! Betűt tartalmaz!");
                                break;
                            }
                        }
                    }
                    if(hibasadat == 0 && i==0){
                        if((k == 1) && (Integer.parseInt(tomb[0]) > 90 || Integer.parseInt(tomb[0]) < -90)){
                            segedpeldany.hibasBevitelFigyelmeztetes(mezo, "Az első koordináta nem lehet 90 foktól nagyobb, illetve -90 foktól kisebb!");
                            break;
                        }
                    }
                    if(hibasadat == 0 && i==0){
                        if((k == 2) && (Integer.parseInt(tomb[0]) > 180 || Integer.parseInt(tomb[0]) < -180)){
                            segedpeldany.hibasBevitelFigyelmeztetes(mezo, "A második koordináta nem lehet 180 foktól nagyobb, illetve -180 foktól kisebb!");
                            break;
                        }  
                    }
                    if(hibasadat == 0 && i==1){
                        if(Integer.parseInt(tomb[1]) > 60 || Integer.parseInt(tomb[1]) < 0){
                            segedpeldany.hibasBevitelFigyelmeztetes(mezo, "A szögperc nem lehet 60-nál nagyobb, illetve 0-nál kisebb!");
                            break;
                        }
                    }
                    if(hibasadat == 0 && i==2){
                        String tmp = tomb[2].replace(',', '.');
                        if(Double.parseDouble(tmp) > 60.0 || Double.parseDouble(tmp) < 0.0){
                            segedpeldany.hibasBevitelFigyelmeztetes(mezo, "A szögmásodperc nem lehet 60-nál nagyobb, illyetve 0-nál kisebb!");
                            break;
                        }


                    }
                }
        }
    }
}
